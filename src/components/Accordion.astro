---
interface Props {
  elementId: string;
  title: string;
  links: any[];
}
const { elementId, title, links } = Astro.props;
---

<div
  id={"accordion-flush-" + elementId}
  data-accordion="collapse"
  data-active-classes="bg-white text-black"
  data-inactive-classes="text-gray-500"
  class="lg:hidden"
>
  <h2 id={"accordion-flush-" + elementId + "heading-1"}>
    <button
      type="button"
      class="flex items-center justify-between w-full py-5 font-medium rtl:text-right text-gray-500 border-b border-gray-200 gap-3"
      data-accordion-target={"#accordion-flush-" + elementId + "-body-1"}
      aria-expanded="false"
      aria-controls={"accordion-flush-" + elementId + "-body-1"}
    >
      <span>{title}</span>
      <svg
        data-accordion-icon
        class="w-3 h-3 rotate-180 shrink-0"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 10 6"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M9 5 5 1 1 5"></path>
      </svg>
    </button>
  </h2>
  <div
    id={"accordion-flush-" + elementId + "-body-1"}
    class="hidden"
    aria-labelledby={"accordion-flush-" + elementId + "heading-1"}
  >
    <div class="py-5 border-b border-gray-200">
      <ul class="flex flex-col gap-2 text-gray-500">
        {
          links.map((link) => (
            <li>
              <a href={link.href}>{link.title}</a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</div>
